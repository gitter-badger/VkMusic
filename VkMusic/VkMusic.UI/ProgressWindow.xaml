<Window x:Class="WpfUI.ProgressWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Синхронизация" Height="95.548" Width="297.945" ResizeMode="NoResize" WindowStyle="None" Background="#00000000" AllowsTransparency="True">
    <Window.Resources>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style x:Key="syncProgress" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="#FF9C9C9C" CornerRadius="10"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="Black" RadiusX="10" RadiusY="10"/>
                                <Rectangle x:Name="Animation" RenderTransformOrigin="0.5,0.5" Fill="Black" RadiusX="10" RadiusY="10">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <Style x:Key="HideButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path5">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF5B5B5B"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path5">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF5B5B5B"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Canvas x:Name="Layer_1" Width="16" Height="12" Canvas.Left="0" Canvas.Top="0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <!--Unknown tag: metadata-->
                                <!--Unknown tag: sodipodi:namedview-->
                                <Rectangle xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Canvas.Top="2.375" Width="16" Height="8.792" x:Name="rect3"/>
                                <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path5" Fill="Black" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                    <Path.Data>
                                        <PathGeometry Figures="M0.018 5.283c0-1.103 1.115-1.997 2.492-1.997h10.998  C14.884 3.286 16 4.18 16 5.283s-0.396 1.311-1.156 1.685c0 0-6.198 3.313-6.844 3.313S1.271 7.015 1.271 7.015  C0.854 6.784 0.018 6.386 0.018 5.283z" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.BorderBrush>
        <RadialGradientBrush>
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop/>
        </RadialGradientBrush>
    </Window.BorderBrush>
    <Grid Margin="0,0,0,-1" RenderTransformOrigin="0.493,0.568">
        <Border
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Width="Auto"
			Height="Auto"
			Margin="2"
			CornerRadius="10" Background="White" BorderThickness="3" BorderBrush="#1F000000">
            <!-- I have no sense of beauty.. So i use SketchFlow Print there -->
            <TextBlock Margin="0,63.336,15,0" VerticalAlignment="Top" Height="17" HorizontalAlignment="Right" Foreground="Black" Width="94"
        		Text="VkMusicSync"
        		TextTrimming="CharacterEllipsis" Opacity="0.8" FontFamily="SketchFlow Print" RenderTransformOrigin="0.5,0.5" FontSize="15" FontWeight="Thin">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.04"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Border>
        <TextBlock x:Name="titleTextBlock" Margin="0,11.664,153,0" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" HorizontalAlignment="Right" Foreground="Black" Width="127"
    		Text="Синхронизация..."
    		TextTrimming="CharacterEllipsis" Opacity="0.8" FontSize="14"/>
        <Grid Margin="20,10">
            <ProgressBar Minimum="0" Maximum="100" Margin="0.027,26.774,-0.027,26.5" x:Name="syncProgress" Foreground="Black" Background="#FF9C9C9C" BorderBrush="#FF232323" Style="{DynamicResource syncProgress}" />
            <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-0.028,27.774,-0.027,25.5" x:Name="syncProgressValue" RenderTransformOrigin="0.505,0.438" Width="258" Height="23.274" FontSize="15" Foreground="White" />
        </Grid>
        <Button x:Name="CloseButton" Content="Hide" HorizontalAlignment="Left" Margin="258,9,0,0" VerticalAlignment="Top" Width="20" Click="CloseButton_Click" Height="21" Style="{DynamicResource HideButtonStyle}"/>
    </Grid>
</Window>
